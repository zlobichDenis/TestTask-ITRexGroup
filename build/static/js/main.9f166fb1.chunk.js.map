{"version":3,"sources":["components/column/column.jsx","components/row/row.jsx","components/table/table.jsx","components/filters/filters.jsx","components/search/search.jsx","components/table-buttons/table-buttons.jsx","components/show-container/show-container.jsx","components/app/App.js","index.js"],"names":["Column","props","fieldValue","Row","person","onChangeActivePerson","columnsOfPerson","Object","keys","map","key","keyModifier","Math","random","state","id","onClick","Table","data","activeFieldOfSort","onChangeActiveFieldOfSort","activeFieldTitle","field","direction","rowsOfTable","headRow","activeStyle","transform","className","value","style","alt","src","evt","sortField","target","Filters","availableStates","onChangeActiveFilter","options","Array","from","class","onChange","activeFilter","defaultValue","Search","onChangeSubstringInSearch","placeholder","setTimeout","type","TableButtons","numberOfButtons","onChangeCurrentIndex","currentIndexOfData","TYPES_OF_BUTTONS","pageButtons","fill","item","index","disabled","name","ShowContainer","firstName","lastName","description","adress","streetAddress","city","zip","App","currentActivePerson","substringInSearch","bind","preparedData","length","first","forEach","push","slice","sort","a","b","localeCompare","email","phone","filter","substring","dataWithSubstring","includes","this","splitDataByPage","filteredData","setState","typeOfButton","prevState","Set","add","string","sortedData","getSortedData","showedPersons","prepareDataForRenderingByFilter","getTheAvailableStates","React","Component","json","url","xhr","XMLHttpRequest","open","send","response","getResponse","JSON","parse","getData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f166fb1.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\n\nexport const Column = (props) => {\n    const { fieldValue } = props;\n    return (\n        <td>{ fieldValue }</td>\n    )\n}\n\nColumn.propTypes = {\n    fieldValue: PropTypes.any.isRequired,\n}","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { Column } from \"../column/column\";\n\nexport const Row = (props) => {\n    const { person, onChangeActivePerson } = props;\n\n    const columnsOfPerson = Object.keys(person).map((key) => {\n        const keyModifier = Math.random() * 10;\n        if (key === 'adress') {\n            return <Column key={`person${person[key].id + keyModifier}__${key}`} fieldValue={person[key].state} />\n        } else if (key === 'description') {\n            return undefined;\n        }\n        return <Column key={`person${person[key].id + keyModifier}__${key}`} fieldValue={person[key]} />\n    });    \n\n    return (\n        <tbody>\n            <tr onClick={onChangeActivePerson}>\n                {columnsOfPerson}\n            </tr>\n        </tbody>\n    )\n}\n\nRow.propTypes = {\n    person: PropTypes.object.isRequired,\n    onChangeActivePerson: PropTypes.func.isRequired,\n}","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { Row } from \"../row/row\";\n\n\nexport const Table = (props) => {\n    const { data, onChangeActivePerson, activeFieldOfSort, onChangeActiveFieldOfSort } = props;\n    const { field: activeFieldTitle, direction } = activeFieldOfSort;\n\n    const rowsOfTable = data.map((person) => {\n        const keyModifier = Math.random() * 10;\n        return <Row onChangeActivePerson={() => onChangeActivePerson(person)} key={person.id + keyModifier} person={person}/>\n    });\n\n    const headRow = Object.keys(data[0]).map((key) => {\n        const activeStyle = activeFieldTitle === key && direction === true ? {transform: 'rotate(180deg)'} : {};\n        if (key === 'adress') {\n            return (\n                <th key={`head-row__state`}>\n                    <button \n                        className='sort-button'\n                        onClick={() => {\n                            const sortField = 'state';\n                            const isDecrease = activeFieldTitle === 'state' ? !direction : true;\n                            const fieldOfSort = {\n                                field: sortField,\n                                direction: isDecrease,\n                            }\n                            onChangeActiveFieldOfSort(fieldOfSort)\n                        }}\n                        key={`sort-button-${key}`} \n                        value='state'> \n                            <img \n                                style={activeFieldTitle === 'state' && direction === true ? {transform: 'rotate(180deg)'} : {}} \n                                alt='sort'\n                                className='sort-button__img' src=\"https://img.icons8.com/external-those-icons-lineal-color-those-icons/50/000000/external-arrow-arrows-those-icons-lineal-color-those-icons-8.png\"/>\n                    </button>state \n                </th>\n            )\n        } else if (key === 'description') {\n            return undefined;\n        }\n        return (\n            <th key={`head-row__${key}`}>\n                <button \n                    className='sort-button'\n                    onClick={(evt) => {\n                        const sortField = evt.target.value;\n                        const isDecrease = activeFieldTitle === key ? !direction : true;\n                        const fieldOfSort = {\n                                field: sortField,\n                                direction: isDecrease,\n                            }\n                        onChangeActiveFieldOfSort(fieldOfSort)\n                        }} \n                    key={`sort-button-${key}`} \n                    value={key}>\n                        <img alt='sort' style={activeStyle} className='sort-button__img' src=\"https://img.icons8.com/external-those-icons-lineal-color-those-icons/50/000000/external-arrow-arrows-those-icons-lineal-color-those-icons-8.png\"/>\n                </button>{key}\n            </th>\n        )\n    })\n\n    return (\n        <table className=\"container\">\n            <thead>               \n                <tr>\n                    {headRow}\n                </tr>\n            </thead>\n            {rowsOfTable}\n        </table>\n    )\n}\n\nTable.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    onChangeActivePerson: PropTypes.func.isRequired,\n    activeFieldOfSort: PropTypes.object.isRequired,\n    onChangeActiveFieldOfSort: PropTypes.func.isRequired,\n}","import React from \"react\";\nimport PropTypes from 'prop-types';\n\n\nexport const Filters = (props) => {\n    const { availableStates, onChangeActiveFilter } = props;\n    const options = Array.from(availableStates).map((state) => {\n        return (\n            <option \n                key={`state-${state}`} \n                className=\"\" \n                value={state}>\n            {state}\n            </option>\n        )\n    })\n    \n    return (\n        <div class=\"select\">\n            <select                    \n                onChange={(evt) => {\n                    const activeFilter = evt.target.value;\n                    onChangeActiveFilter(activeFilter)\n                }}  \n                defaultValue='to-high' \n                className=\"select\" \n                id=\"places-sorting\">\n                <option \n                    key={`state-${'None'}`} \n                    className=\"\" \n                    value={'NONE'}>\n                    NONE\n                </option>\n                {options}\n            </select>\n        </div>\n    )\n}\n\nFilters.propTypes = {\n    availableStates: PropTypes.object.isRequired,\n    onChangeActiveFilter: PropTypes.func.isRequired,\n}","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nexport const Search = (props) => {\n    const { onChangeSubstringInSearch } = props;\n    return (\n        <input \n            className='search-input'\n            placeholder='Seach By Name: '\n            onChange={(evt) => {\n                setTimeout(onChangeSubstringInSearch(evt.target.value), 500)\n                // onChangeSubstringInSearch(evt.target.value)\n            }} \n            type='text'>\n        </input>\n    )\n};\n\nSearch.propTypes = {\n    onChangeSubstringInSearch: PropTypes.func.isRequired,\n}","import React from \"react\";\nimport PropTypes from 'prop-types';\n\n\n\n\nexport const TableButtons = (props) => {\n    const { numberOfButtons, onChangeCurrentIndex, currentIndexOfData } = props;\n\n    const TYPES_OF_BUTTONS = {\n        INDEX: 'INDEX',\n        NEXT: 'NEXT',\n        PREV: 'PREV',\n    }\n\n    const pageButtons = new Array(numberOfButtons).fill(null).map((item, index) => {\n        const keyModifier = Math.random() * 15;\n        return (\n            <button \n                className='page-button'\n                disabled={index === currentIndexOfData ? true : false}\n                key={keyModifier}\n                onClick={(evt) => {\n                    const index = +evt.target.value;\n                    onChangeCurrentIndex(index, TYPES_OF_BUTTONS.INDEX);\n                }} \n                value={index} \n                name={`button-page-${index}`}>{index + 1}\n            </button>\n        )\n    })\n    return (\n        <div className='page-buttons'>\n            <button\n                className='page-button' \n                onClick={() => {\n                    onChangeCurrentIndex(null, TYPES_OF_BUTTONS.PREV);\n                }} \n                name='prev-page'\n                disabled={currentIndexOfData === 0 ? true : false}\n                >\n                Prev\n            </button>\n            {pageButtons}\n            <button \n                className='page-button'\n                onClick={() => {\n                    onChangeCurrentIndex(null, TYPES_OF_BUTTONS.NEXT);\n                }} \n                name='next-page'\n                disabled={currentIndexOfData >= numberOfButtons - 1 || numberOfButtons <= 1 ? true : false}\n                >\n                Next\n            </button>\n        </div>\n    )\n}\n\nTableButtons.propTypes = {\n    numberOfButtons: PropTypes.number.isRequired,\n    onChangeCurrentIndex: PropTypes.func.isRequired,\n    currentIndexOfData: PropTypes.number.isRequired,\n}","import React from \"react\";\nimport PropTypes from 'prop-types';\n\n\nexport const ShowContainer = (props) => {\n    const { firstName, lastName, description, adress } = props.person;\n    return (\n        <div className='show-container'>\n            <h3 className='show-container__title'>Profile info:</h3>\n            <p className='show-container_text'>Selected profile: <span>{`${firstName} ${lastName}`}</span></p>\n            <p className='show-container_text'>Description: <span>{description}</span></p>\n            <p className='show-container_text'>Adress: <span>{adress.streetAddress}</span></p>\n            <p className='show-container_text'>City: <span>{adress.city}</span></p>\n            <p className='show-container_text'>State: <span>{adress.state}</span></p>\n            <p className='show-container_text'>Index: <span>{adress.zip}</span></p>\n        </div>\n    )\n}\n\nShowContainer.propTypes = {\n    person: PropTypes.object,\n}","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { Table } from \"../table/table\";\nimport { Filters } from \"../filters/filters\";\nimport { Search } from \"../search/search\";\nimport { TableButtons } from \"../table-buttons/table-buttons\";\nimport { ShowContainer } from \"../show-container/show-container\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.props = props;\n\n    this.state = {\n      currentIndexOfData: 0,\n      currentActivePerson: null,\n      activeFilter: 'NONE',\n      activeFieldOfSort: {},\n      substringInSearch: '',\n  };\n\n\n\n    this.onChangeActivePerson = this.onChangeActivePerson.bind(this);\n    this.onChangeCurrentIndex = this.onChangeCurrentIndex.bind(this);\n    this.onChangeActiveFilter = this.onChangeActiveFilter.bind(this);\n    this.onChangeActiveFieldOfSort = this.onChangeActiveFieldOfSort.bind(this);\n    this.onChangeSubstringInSearch = this.onChangeSubstringInSearch.bind(this);\n }\n\n  splitDataByPage(data) {\n    let preparedData = [];\n    const maxNumberOfPersonsPerPage = 20;\n\n    if (data.length >= 20) {\n      let first = 0;\n      data.forEach((item, index) => {\n        if ((index + 1) % maxNumberOfPersonsPerPage === 0) {\n          preparedData.push(data.slice(first, index + 1));\n          first += 20\n        }\n      })\n      return preparedData\n    } else {\n      preparedData.push(data);\n      return preparedData;\n    }\n  }\n\n  getSortedData(data, sortField) {\n    const { field, direction } = sortField;\n  \n    switch (field) {\n      case 'id':\n        if (direction) {\n          return data.slice().sort((a, b) => b.id - a.id);\n        }\n        return data.slice().sort((a, b) => a.id - b.id);\n      case 'firstName':\n        if (direction) {\n          return data.slice().sort((a, b) => b.firstName.localeCompare(a.firstName));\n        }\n        return data.slice().sort((a, b) => a.firstName.localeCompare(b.firstName));\n      case 'lastName':\n        if (direction) {\n          return data.slice().sort((a, b) => b.lastName.localeCompare(a.lastName));\n        }\n        return data.slice().sort((a, b) => a.lastName.localeCompare(b.lastName));\n      case 'email':\n        if (direction) {\n          return data.slice().sort((a, b) => b.email.localeCompare(a.email));\n        }\n        return data.slice().sort((a, b) => a.email.localeCompare(b.email));\n      case 'phone':\n        if (direction) {\n          return data.slice().sort((a, b) => b.phone[1].localeCompare(a.phone[1]));\n        }\n        return data.slice().sort((a, b) => a.phone[1].localeCompare(b.phone[1]));\n      case 'state': \n        if (direction) {\n          return data.slice().sort((a, b) => b.adress.state.localeCompare(a.adress.state));\n        }\n        return data.slice().sort((a, b) => a.adress.state.localeCompare(b.adress.state));\n      default:\n        return data;\n    }\n  }\n\n  prepareDataForRenderingByFilter(data, filter, substring) {\n    let preparedData\n    if (filter === 'NONE') {\n      if (substring) {\n        let dataWithSubstring = data.filter((person) => person.firstName.includes(substring));\n        return preparedData = dataWithSubstring.length > 0 ? this.splitDataByPage(dataWithSubstring) : this.splitDataByPage(data);\n      }\n      preparedData = this.splitDataByPage(data);\n      return preparedData;\n    } else {\n      let filteredData = data.filter((item) => item.adress.state === filter);\n        if (substring) {\n          let dataWithSubstring = filteredData.filter((person) => person.firstName.includes(substring));\n          return preparedData = dataWithSubstring.length > 0 ? this.splitDataByPage(dataWithSubstring) : this.splitDataByPage(filteredData);\n        }\n      preparedData = this.splitDataByPage(filteredData)\n      return preparedData;\n    }\n }\n\n  onChangeActivePerson(person) {\n    this.setState({\n      currentActivePerson: person,\n    })\n }\n\n  onChangeCurrentIndex(index, typeOfButton) {\n    switch (typeOfButton) {\n      case 'NEXT':\n        this.setState(prevState => ({\n          currentIndexOfData: prevState.currentIndexOfData + 1,\n        }))\n\n        break;\n\n      case 'PREV':\n        this.setState(prevState => ({\n          currentIndexOfData: prevState.currentIndexOfData -1,\n        }))\n        break;\n\n      default:\n        this.setState({\n          currentIndexOfData: index,\n        })\n    }\n\n }\n\n  getTheAvailableStates(data) {\n    let availableStates = new Set();\n    data.forEach((person) => {\n      availableStates.add(person.adress.state);\n    })\n    \n    return availableStates\n  }\n\n  onChangeActiveFilter(activeFilter) {\n    this.setState({\n      activeFilter: activeFilter,\n      currentIndexOfData: 0,\n      activeFieldOfSort: {},\n    })\n  }\n\n  onChangeActiveFieldOfSort(sortField) {\n    this.setState({\n      activeFieldOfSort: sortField,\n      currentIndexOfData: 0,\n    })\n  }\n\n  onChangeSubstringInSearch(string) {\n    this.setState({\n      substringInSearch: string,\n      activeFieldOfSort: {},\n      currentIndexOfData: 0,\n    })\n  }\n\n\n\n  render() {\n    const { data } = this.props;\n    let { activeFilter, activeFieldOfSort, substringInSearch } = this.state;\n    let sortedData = this.getSortedData(data, activeFieldOfSort);\n    const showedPersons = this.prepareDataForRenderingByFilter(sortedData, activeFilter, substringInSearch);\n    let availableStates = this.getTheAvailableStates(sortedData);\n    const { currentIndexOfData, currentActivePerson } = this.state;\n\n\n    return (\n      <div className=\"App\">\n        <Search onChangeSubstringInSearch={this.onChangeSubstringInSearch}/>\n        <Filters onChangeActiveFilter={this.onChangeActiveFilter} availableStates={availableStates}/>\n        <Table onChangeActiveFieldOfSort={this.onChangeActiveFieldOfSort} activeFieldOfSort={activeFieldOfSort} onChangeActivePerson={this.onChangeActivePerson} data={showedPersons[currentIndexOfData]}/>\n        <TableButtons currentIndexOfData={currentIndexOfData} onChangeCurrentIndex={this.onChangeCurrentIndex} numberOfButtons={showedPersons.length}/>\n        {currentActivePerson ? <ShowContainer person={currentActivePerson} /> : null }\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\nfunction getData() {\n  const url = 'https://itrex-react-lab-files.s3.eu-central-1.amazonaws.com/react-test-api.json';\n  const getResponse = (url) => { \n      const xhr = new XMLHttpRequest();\n      xhr.open(`GET`, url, false); \n      xhr.send();\n      return xhr.response; \n  };\n  const json = getResponse(url);\n  const data = JSON.parse(json)\n      .sort((a, b) => a.id - b.id);\n  return data;\n};\n\nconst data = getData();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App data={data}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}